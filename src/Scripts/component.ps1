<#
.SYNOPSIS
    Sample control for UniversalDashboard.
.DESCRIPTION
    Sample control function for UniversalDashboard. This function must have an ID and return a hash table.
.PARAMETER Id
    An id for the component default value will be generated by new-guid.
.EXAMPLE
    PS C:\> <example usage>
    Explanation of what the example does
.INPUTS
    Inputs (if any)
.OUTPUTS
    Output (if any)
.NOTES
    General notes
#>
function New-UDCalendar {
    param(
        [Parameter()]
        [string]$Id = ([Guid]::NewGuid()),
        [Parameter()]
        [object]$OnClickDay,
        [Parameter()]
        [object]$OnChange,
        [Parameter()]
        [DateTime]$StartView = (Get-Date -format "o"),
        [Parameter()]
        [Switch]$hideNavigation = $false
    )

    End {

        if ($null -ne $OnChange) {
            if ($OnChange -is [scriptblock]) {
                $OnChange = New-UDEndpoint -Endpoint $OnChange -Id ($Id + "onChange")
            }
            elseif ($onChange -isnot [UniversalDashboard.Models.Endpoint]) {
                throw "OnChange must be a script block or UDEndpoint."
            }
        }
        if ($null -ne $OnClickDay) {
            if ($OnClickDay -is [scriptblock]) {
                $OnClickDay = New-UDEndpoint -Endpoint $OnClickDay -Id ($Id + "onClickDay")
            }
            elseif ($OnClickDay -isnot [UniversalDashboard.Models.Endpoint]) {
                throw "OnClickDay must be a script block or UDEndpoint."
            }
        }

        @{
            # The AssetID of the main JS File
            assetId = $AssetId 
            # Tell UD this is a plugin
            isPlugin = $true 
            # This ID must be the same as the one used in the JavaScript to register the control with UD
            type = "ud-calendar"
            # An ID is mandatory 
            id = $Id

            # This is where you can put any other properties. They are passed to the React control's props
            # The keys are case-sensitive in JS. 
            StartView = $StartView
            hideNavigation = $hideNavigation
        }

    }
}